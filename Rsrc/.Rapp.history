all_lnLs$ttl_LnL - sum(bd_lq)#
LnLs2[2] - sum(bd_lq)
sum(log(tmp_rowSums))
tmp_rowSums = (base_likes / res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS)[,numstates]#
tmp_rowSums#
log(tmp_rowSums)#
sum(log(tmp_rowSums))
sum(log(tmp_rowSums), na.rm=TRUE)
res$total_loglikelihood
sum(log(tmp_rowSums), na.rm=TRUE)#
# Log-likelihoods#
#
res$total_loglikelihood#
#
all_lnLs$ttl_LnL - res$total_loglikelihood - log(1/16)#
LnLs2[2] - res$total_loglikelihood - log(1/16)#
#
all_lnLs$ttl_LnL - res$total_loglikelihood#
LnLs2[2] - res$total_loglikelihood#
# Diversitree birthdeath calculation#
lik.bd <- make.bd(tree=tr, sampling.f=NULL, unresolved=NULL, times=NULL, control=list(method="ode"))#
diversitree_bd = lik.bd(pars=c(birthRate=0.3288164, deathRate=0.0), intermediates=TRUE)#
bd_lq = attr(diversitree_bd,"intermediates")$lq#
sum(bd_lq)#
#
all_lnLs$ttl_LnL - sum(bd_lq)#
LnLs2[2] - sum(bd_lq)#
#
bd = bd_liks(tr, birthRate=birthRate, deathRate=deathRate)#
bd
all_lnLs
sum(bd_lq)
sum(bd_lq) + sum(lq)
sum(bd_lq) - sum(lq)
sum(lq) - sum(bd_lq)
all_lnLs
bd
dput(lik.bd)
rootfunc
diversitree::: rootfunc
cache <- make.cache.bd(tree, sampling.f, unresolved, times, control)
cache <- diversitree:::make.cache.bd(tree, sampling.f, unresolved, times, control)
cache <- diversitree:::make.cache.bd(tree, sampling.f, unresolved, times, control=list(method="ode"))
cache <- diversitree:::make.cache.bd(tree=tr, sampling.f, unresolved, times, control=list(method="ode"))
cache <- diversitree:::make.cache.bd(tree=tr, sampling.f=NULL, unresolved=NULL, times=NULL, control=list(method="ode"))
cache
cache <- diversitree:::make.cache.bd(tree=tr, sampling.f=NULL, unresolved=NULL, times=NULL, control=list(method="ode"))
cache$const
bd
diversitree:::rootfunc.bd.ode
diversitree_bd
diversitree_bd - cache$const
c(diversitree_bd) - cache$const
names(res)
diversitree_bd_lnL_minus_const - res$total_loglikelihood
diversitree_bd_lnL_minus_const = c(diversitree_bd) - cache$const#
diversitree_bd_lnL_minus_const#
# -35.90835#
#
diversitree_bd_lnL_minus_const - res$total_loglikelihood
exp(-1.365222)
log(1/16)
names(res)
res$ML_marginal_prob_each_state_at_branch_top_AT_node
res$ML_marginal_prob_each_state_at_branch_top_AT_node[20,]
sum(res$ML_marginal_prob_each_state_at_branch_top_AT_node[20,])
names(res)
sum(res$condlikes_of_each_state[20,])
sqrt(sum(res$condlikes_of_each_state[20,]))
diversitree_bd_lnL_minus_const - res$total_loglikelihood
lq = t(attr(res2, "intermediates")$lq)			# Branch likelihoods#
vals = t(attr(res2, "intermediates")$vals)	# Es and Ds at the root#
nstates = length(vals) / 2#
E_indices = 1:nstates#
d_root_orig = vals[-E_indices]							# Original D likelihoods at root
d_root_orig
sum(d_root_orig)
tr
res$condlikes[20,]
sum(res$condlikes[20,])
d_root_orig  / res$condlikes[20,]
log(0.3678631)
diversitree_bd_lnL_minus_const
diversitree_bd_lnL_minus_const - res$total_loglikelihood
exp(-1.365222)
0.255324/0.05317382
exp(.365222)
1/exp(.365222)
diversitree_bd_lnL_minus_const
sum(lq)
sum(lq) - cache$const
sum(lq) + cache$const
c(diversitree_bd)
diversitree:::rootfunc.bd.ode
diversitree_bd
log(0.3288164 )
c(diversitree_bd) - cache$const - log(birthRate)
exp(-1)
c(diversitree_bd) - cache$const - log(birthRate) + exp(-1)
res$total_loglikelihood
log(-birthRate)
c(diversitree_bd) - cache$const - log(birthRate) + exp(-1)
-34.54313 - -34.42821
c(diversitree_bd) - cache$const - log(birthRate) + exp(-(15/16))
exp(-0.11492)
c(diversitree_bd) - cache$const - log(15/16*birthRate) + exp(-1)
c(diversitree_bd) - cache$const - log(16/15*birthRate) + exp(-1)
c(diversitree_bd) - cache$const - log(16/15*birthRate) + exp(-15/16)
c(diversitree_bd) - cache$const - log(16/15*birthRate) + exp(-16/15)
root_probs_single = rep(1, times=numstates)#
root_probs_single[sum(include_null_range)] = 0
root_probs_single
root_probs_single = rep(1, times=numstates)#
root_probs_single[sum(include_null_range)] = 0#
#root_probs_single[1+include_null_range] = 1#
#root_probs_single = root_probs_single / sum(root_probs_single)#
#
# Do the ClaSSE calculation, under many different assumptions#
res1 = classe_16states(pars=classe_params, root=ROOT.OBS, root.p=NULL, intermediates=TRUE, condition.surv=FALSE)#
res2 = classe_16states(pars=classe_params, root=ROOT.FLAT, root.p=NULL, intermediates=TRUE, condition.surv=FALSE)#
root_probs = root_probs_equal#
res3 = classe_16states(pars=classe_params, root=ROOT.GIVEN, root.p=root_probs, intermediates=TRUE, condition.surv=FALSE)#
root_probs = root_probs_biased#
res4 = classe_16states(pars=classe_params, root=ROOT.GIVEN, root.p=root_probs, intermediates=TRUE, condition.surv=FALSE)#
root_probs = root_probs_single#
res5 = classe_16states(pars=classe_params, root=ROOT.GIVEN, root.p=root_probs, intermediates=TRUE, condition.surv=FALSE)#
res6 = classe_16states(pars=classe_params, root=ROOT.EQUI, root.p=NULL, intermediates=TRUE, condition.surv=FALSE)#
#
res1t = classe_16states(pars=classe_params, root=ROOT.OBS, root.p=NULL, intermediates=TRUE, condition.surv=TRUE)#
res2t = classe_16states(pars=classe_params, root=ROOT.FLAT, root.p=NULL, intermediates=TRUE, condition.surv=TRUE)#
root_probs = root_probs_equal#
res3t = classe_16states(pars=classe_params, root=ROOT.GIVEN, root.p=root_probs, intermediates=TRUE, condition.surv=TRUE)#
root_probs = root_probs_biased#
res4t = classe_16states(pars=classe_params, root=ROOT.GIVEN, root.p=root_probs, intermediates=TRUE, condition.surv=TRUE)#
root_probs = root_probs_single#
res5t = classe_16states(pars=classe_params, root=ROOT.GIVEN, root.p=root_probs, intermediates=TRUE, condition.surv=TRUE)#
res6t = classe_16states(pars=classe_params, root=ROOT.EQUI, root.p=NULL, intermediates=TRUE, condition.surv=TRUE)#
#
# get_classe_LnLs returns the total log-likelihood, and #
# the total of the branch likelihoods#
LnLs1 = get_classe_LnLs(res1)#
LnLs2 = get_classe_LnLs(res2)#
LnLs3 = get_classe_LnLs(res3)#
LnLs4 = get_classe_LnLs(res4)#
LnLs5 = get_classe_LnLs(res5)#
LnLs6 = get_classe_LnLs(res6)#
LnLs1t = get_classe_LnLs(res1t)#
LnLs2t = get_classe_LnLs(res2t)#
LnLs3t = get_classe_LnLs(res3t)#
LnLs4t = get_classe_LnLs(res4t)#
LnLs5t = get_classe_LnLs(res5t)#
LnLs6t = get_classe_LnLs(res6t)#
#
LnLst = as.data.frame(rbind(LnLs1, LnLs2, LnLs3, LnLs4, LnLs5, LnLs6, LnLs1t, LnLs2t, LnLs3t, LnLs4t, LnLs5t, LnLs6t), stringsAsFactors=FALSE)#
names(LnLst) = c("ttl_LnL", "branch_LnL")#
ObsDiff = (LnLst$ttl_LnL - LnLst$branch_LnL)#
exp_ObsDiff = exp((LnLst$ttl_LnL - LnLst$branch_LnL))#
LnLdiff = round((LnLst$ttl_LnL - LnLst$branch_LnL - log(birthRate)), digits=4)#
exp_LnLdiff = exp((LnLst$ttl_LnL - LnLst$branch_LnL - log(birthRate)))#
LnLst2 = cbind(LnLst, ObsDiff, LnLdiff, exp_ObsDiff, exp_LnLdiff)#
all_lnLs = cft(LnLst2, numdigits_inbetween_have_fixed_digits=8)#
all_lnLs$ttl_LnL = as.numeric(all_lnLs$ttl_LnL)#
cft(LnLst2, numdigits_inbetween_have_fixed_digits=8)
LnLs2[2]
LnLs2[1] - cache$const - log(birthRate)
LnLs2[1] + cache$const + log(birthRate)
cache$const
sum(lq) - cache$const
sum(lq) + cache$const
sum(lq) + cache$const + log(1/15)
sum(lq) + cache$const + log(1/16)
sum(lq) + cache$const + log(1/16) + log(birthRate)
sum(lq) + cache$const + log(1/15) + log(birthRate)
sum(lq) + cache$const + log(1/15) + log(birthRate)
LnLs4[1] - res$total_loglikelihood
LnLs4[1] + cache$const + log(birthRate)
LnLs4[1] + cache$const
log(1/15)
LnLs4[1] + cache$const + log(1/15)
LnLs4[1] + cache$const - log(1/15)
LnLs4[1] + cache$const - log(1/15) - log(-1)
LnLs4[1] + cache$const - log(1/15) - log(birthRate)
LnLs4[1] + cache$const - log(1/15) - log(birthRate)
exp(-1)
LnLs4[1] + cache$const - log(1/15) - 1
LnLs4[1] + cache$const - log(1/15) + 1
res$total_loglikelihood
LnLs4[1] + cache$const - log(1/16) - 1
LnLs4[1] + cache$const - log(1/15) - 1
LnLs4[1] + cache$const - log(1/15) - birthRate
LnLs4[1] + cache$const - log(1/15) + birthRate
LnLs4[1] + cache$const - log(1/15) - 1 - birthRate
LnLs4[1] + cache$const - log(1/15) - 1 + birthRate
LnLs4[1] + cache$const - log(1/15) - 1
LnLs4[1] + cache$const - log(1/15)
LnLs4[1] + cache$const - log(1/15) + 1
LnLs4[1] + cache$const - log(1/16) + 1
LnLs4[1] + cache$const - log(1/16) + 1 + birthRate
LnLs4[1] + cache$const - log(1/16) + 1 - birthRate
LnLs4[1] + cache$const - log(1/15) + 1 - birthRate
LnLs4[1] + cache$const - log(1/15) + birthRate
LnLs4[1] + cache$const - log(1/16) + birthRate
res$condlikes[20,]
sum(res$condlikes[20,])
log(sum(res$condlikes[20,]))
log(1/16)
LnLs4[1] + cache$const - log(sum(res$condlikes[20,]))
res$total_loglikelihood
log(1/15)
log(15/16)
LnLs4[1] + cache$const + log(sum(res$condlikes[20,]))
LnLs4[1] + cache$const + log(sum(res$condlikes[20,])) + log(1/15)
LnLs4[1] + cache$const + log(sum(res$condlikes[20,])) - log(1/15)
LnLs4[1] + cache$const + log(sum(res$condlikes[20,])) - log(1/15) + log(birthRate)
LnLs4[1] + cache$const + log(sum(res$condlikes[20,])) - log(1/15) - log(birthRate)
LnLs4[1] + cache$const + log(sum(res$condlikes[20,]))
LnLs4[1] + cache$const - log(sum(res$condlikes[20,]))
-35.27541 - res$total_loglikelihood
0.7322835#
/birthRate
0.7322835/birthRate
1-birthRate
log(1-birthRate)
LnLs4[1] + cache$const
LnLs4[1] + cache$const - sum(lq)
d.root
15/16
log(15/16)
sum(lq)
lnlLnLs4
LnLs4
res4t
res4
root_probs_biased
res5
lq = t(attr(res5, "intermediates")$lq)			# Branch likelihoods#
vals = t(attr(res5, "intermediates")$vals)	# Es and Ds at the root#
nstates = length(vals) / 2#
E_indices = 1:nstates#
d_root_orig = vals[-E_indices]							# Original D likelihoods at root
d_root_orig
sum(d_root_orig)
root.p = root_probs_single#
loglik = log(sum(root.p * d_root_orig)) + sum(lq)#
loglik
res5
log(sum(root.p * d_root_orig)) #
log(sum(d_root_orig))
d_root_orig
d_root_orig / res$condlines[20,]
d_root_orig / res$condlikes[20,]
birthRate
log(sum(d_root_orig))#
#
log(sum(res$condlikes[20,])) + 1
log(sum(res$condlikes[20,])) - 1
log(sum(d_root_orig))#
log(sum(res$condlikes[20,])) - 1
sum(lq)
c(res5) - sum(lq)
log(sum(d_root_orig))#
log(sum(res$condlikes[20,])) - 1#
c(res5) - sum(lq)
res$total_loglikelihood
res$total_loglikelihood - (log(sum(res$condlikes[20,])) - 1)
sum(lq)
sum(lq) - const
sum(lq) - cache$const
sum(lq) + cache$const
res$total_loglikelihood - log(sum(res$condlikes[20,]))
x=sum(lq) + cache$const
y=res$total_loglikelihood - log(sum(res$condlikes[20,]))
x-y
exp(x-y)
1/exp(x-y)
1-birthRate
birthRate
exp(-1)
sum(lq)
sum(lq)+(log(sum(res$condlikes[20,])) - 1)
c(LnLs4)
all_lnLs
sum(log(rowSums(res$condlikes)))
sum(log(rowSums(res$condlikes)[-20]))
names(res)
res$relative_probs_of_each_state_at_bottom_of_root_branch
log(rowSums(res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS))
log(rowSums(res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS))
res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS
base /res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS
dim(base)
base = t(attr(res2, "intermediates")$base)#
base
base = t(attr(res2, "intermediates")$base)#
base
base_likes
base_likes / res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS
tmp_rowSums = (base_likes / res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS)[,numstates]#
tmp_rowSums#
log(tmp_rowSums)#
sum(log(tmp_rowSums), na.rm=TRUE)
all_lnLs
diversitree_bd
tmp_rowSums
attr(diversitree_bd,"intermediates")$lq
log(tmp_rowSums) - attr(diversitree_bd,"intermediates")$lq
log(tmp_rowSums) + attr(diversitree_bd,"intermediates")$lq
log(tmp_rowSums) / attr(diversitree_bd,"intermediates")$lq
tmp_rowSums -exp(attr(diversitree_bd,"intermediates")$lq)
tmp_rowSums /exp(attr(diversitree_bd,"intermediates")$lq)
attr(diversitree_bd,"intermediates")$lq
sum(attr(diversitree_bd,"intermediates")$lq)
log(tmp_rowSums)
sum(log(tmp_rowSums), na.rm=TRUE)
lq
log(tmp_rowSums) - attr(res4,"intermediates")$lq
names(res)
log(res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS)
res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS
rowSums(res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS)
rowSums(log(res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS))
rowSums(log(res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS))attr(diversitree_bd,"intermediates")$lq
attr(diversitree_bd,"intermediates")$lq
exp(attr(diversitree_bd,"intermediates")$lq)
exp(attr(diversitree_bd,"intermediates")$lq)
round(base_normlikes - res$condlikes_of_each_state / rowSums(res$condlikes_of_each_state), 5)
round(base_normlikes - res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS, 5)#
round(base_normlikes - res$condlikes_of_each_state / rowSums(res$condlikes_of_each_state), 5)
res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS * exp(attr(diversitree_bd,"intermediates")$lq)
x = res$relative_probs_of_each_state_at_branch_bottom_below_node_DOWNPASS * exp(attr(diversitree_bd,"intermediates")$lq)#
#
rowSums(x)
rowSums(x)#
sum(log(rowSums(x))
)
rowSums(x)#
log(rowSums(x))#
sum(log(rowSums(x)), na.rm=TRUE)
log(tmp_rowSums)
sum(lq)
sum(lq)-cache$const
sum(lq)+cache$const
bd_lq = attr(diversitree_bd,"intermediates")$lq#
sum(bd_lq)
diversitree_bd
bd
exp(-18.90835)
bd$lnl_Births_above_root + bd$lnl_branching_times
diversitree_bd
sum(diversitree_bd$lq)
sum(attr(diversitree_bd, "intermediates")$lq)
sum(attr(diversitree_bd, "intermediates")$lq[-20])
attr(diversitree_bd, "intermediates")$lq
attr(diversitree_bd, "intermediates")$lq - bd$$lnl_branching_times
attr(diversitree_bd, "intermediates")$lq - bd$lnl_branching_times
sum(attr(diversitree_bd, "intermediates")$lq) - bd$lnl_branching_times
exp(attr(diversitree_bd, "intermediates")$lq)
exp(-5.328037)
